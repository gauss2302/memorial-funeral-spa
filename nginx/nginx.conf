# HTTP server - can work alongside HTTPS or redirect
server {
    listen 80;
    listen [::]:80;
    server_name ritual-shushenskoe.ru www.ritual-shushenskoe.ru;
    
    # Option 1: Allow both HTTP and HTTPS (as per REG.RU article)
    root /usr/share/nginx/html;
    index index.html;
    
    # If you prefer to redirect all HTTP to HTTPS, uncomment this line instead:
    # return 301 https://$server_name$request_uri;
    
    # Serve icons directory
    location /icons/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Serve images directory
    location /images/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Serve assets directory (CSS, JS bundles)
    location /assets/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Serve favicon and other root-level assets
    location ~* ^/(favicon\.ico|manifest\.json|robots\.txt)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Handle client-side routing (SPA)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Handle API routes (if needed in future)
    location /api/ {
        # Placeholder for future API proxy
        return 404;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security: deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}

# HTTPS server - Based on REG.RU configuration
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    
    # Enable HTTP/2 (modern syntax)
    http2 on;
    server_name ritual-shushenskoe.ru www.ritual-shushenskoe.ru;
    
    root /usr/share/nginx/html;
    index index.html;

    # SSL Configuration - REG.RU format
    ssl_certificate /etc/nginx/ssl/ritual-shushenskoe.ru.crt;
    ssl_certificate_key /etc/nginx/ssl/ritual-shushenskoe.ru.key;
    
    # SSL Session optimization (from REG.RU article)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    keepalive_timeout 70;
    
    # SSL Protocols (updated for modern security)
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Prefer server ciphers
    ssl_prefer_server_ciphers on;
    
    # Modern cipher suite (more secure than REG.RU example)
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    
    # OCSP Stapling (from REG.RU article - improves SSL performance)
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Serve icons directory
    location /icons/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Serve images directory
    location /images/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Serve assets directory (CSS, JS bundles)
    location /assets/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Serve favicon and other root-level assets
    location ~* ^/(favicon\.ico|manifest\.json|robots\.txt)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Handle client-side routing (SPA)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Handle API routes (if needed in future)
    location /api/ {
        # Placeholder for future API proxy
        return 404;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security: deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}